// Generated by view binder compiler. Do not edit!
package com.example.plan_me.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.plan_me.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton loginGoogleBtn;

  @NonNull
  public final AppCompatButton loginKakaoBtn;

  @NonNull
  public final TextView loginOfflineTv;

  @NonNull
  public final TextView loginText1Tv;

  @NonNull
  public final TextView loginText2Tv;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton loginGoogleBtn, @NonNull AppCompatButton loginKakaoBtn,
      @NonNull TextView loginOfflineTv, @NonNull TextView loginText1Tv,
      @NonNull TextView loginText2Tv) {
    this.rootView = rootView;
    this.loginGoogleBtn = loginGoogleBtn;
    this.loginKakaoBtn = loginKakaoBtn;
    this.loginOfflineTv = loginOfflineTv;
    this.loginText1Tv = loginText1Tv;
    this.loginText2Tv = loginText2Tv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.login_google_btn;
      AppCompatButton loginGoogleBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginGoogleBtn == null) {
        break missingId;
      }

      id = R.id.login_kakao_btn;
      AppCompatButton loginKakaoBtn = ViewBindings.findChildViewById(rootView, id);
      if (loginKakaoBtn == null) {
        break missingId;
      }

      id = R.id.login_offline_tv;
      TextView loginOfflineTv = ViewBindings.findChildViewById(rootView, id);
      if (loginOfflineTv == null) {
        break missingId;
      }

      id = R.id.login_text1_tv;
      TextView loginText1Tv = ViewBindings.findChildViewById(rootView, id);
      if (loginText1Tv == null) {
        break missingId;
      }

      id = R.id.login_text2_tv;
      TextView loginText2Tv = ViewBindings.findChildViewById(rootView, id);
      if (loginText2Tv == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, loginGoogleBtn, loginKakaoBtn,
          loginOfflineTv, loginText1Tv, loginText2Tv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
